package com.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.Configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;


@Configuration
@EnableWebSecurity
public class AppConfig {

  @Bean
  SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {

    http.sessionManagement(managment -> managment.sessionCreationPolicy(sessionCreationPolicy.STATELESS))
      .authorizeHttpRequests(Authorize -> authorizeHttpRequests
        .requestMatchers("/api/admin/**").hasAnyRole("RESTAURANT_OWNER", "ADMIN")
        .requestMatchers("/api/**").authenticated()
        .anyRequest().permitAll( )
        ).addFilterBefore(new JwTokenValidator(), BasicAuthenticationFilter.class)
        .csrf(csrf -> csrf.disable())
        .cors(cors -> cors.ConfigurationSource(corsConfigurationSource()));

    return null;
  }

  private CorsConfigurationSource corsConfigurationSource() {
    return new CorsConfigurationSource() {
      @Override
      public CorsConfiguration getCorsConfiguration(HttpServletRequest request) {
          CorsConfiguration cfg = new CorsConfiguration();

          cfg.setAllowedOrigins(Arrays.asList(
            "https://food.vercel.app/",
            "http://localhost:3000"
          ));
        return null;
      }
    };
  }
}
